plugins {

	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'checkstyle'
	id 'pmd'
	id 'jacoco'
}

group = 'restaurant'
version = '1'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'mysql:mysql-connector-java:8.0.33' // Use the version that matches your MySQL server version

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

pmd {
	consoleOutput = true
	toolVersion = "6.38.0"
	rulesMinimumPriority = 5
	ruleSetFiles = files("config/pmd/custom-ruleset.xml")
	ruleSets = []
}

jacoco {
	toolVersion = "0.8.11"
}

jacocoTestReport {
	dependsOn test

	reports {
		xml.required = true
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

jacocoTestCoverageVerification {
	dependsOn jacocoTestReport
	violationRules {
		rule {
			element = 'CLASS'
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.6
			}
			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.6
			}
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
